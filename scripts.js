const cellElements=document.querySelectorAll("[data-cell]"),board=document.querySelector("[data-board]"),winningMessageTextElement=document.querySelector("[data-winning-menssage-text]"),winningMessage=document.querySelector("[data-winning-menssage]"),restartButton=document.querySelector("[data-restart-button]");let isCircleTurn;const winningCombinations=[[0,1,2],[3,4,5],[6,7,8],[0,3,6],[1,4,7],[2,5,8],[0,4,8],[2,4,6]],startGame=()=>{isCircleTurn=!1;for(const a of cellElements)a.classList.remove("circle"),a.classList.remove("x"),a.addEventListener("click",handleClik),a.addEventListener("click",handleClik,{once:!0});setBoardHoverClass(),winningMessage.classList.remove("show-winning-message")},endGame=a=>{winningMessageTextElement.innerText=a?"Empate!":isCircleTurn?"O Venceu!":"X Venceu!",winningMessage.classList.add("show-winning-message")},checkForWin=a=>winningCombinations.some(b=>b.every(b=>cellElements[b].classList.contains(a))),checkForDraw=()=>[...cellElements].every(a=>a.classList.contains("x")||a.classList.contains("circle")),placeMark=(a,b)=>{a.classList.add(b)},setBoardHoverClass=()=>{board.classList.remove("circle"),board.classList.remove("x"),isCircleTurn?board.classList.add("circle"):board.classList.add("x")},swapTurns=()=>{isCircleTurn=!isCircleTurn,setBoardHoverClass()},handleClik=a=>{const b=a.target,c=isCircleTurn?"circle":"x";placeMark(b,c);const d=checkForWin(c),e=checkForDraw();d?endGame(!1):e?endGame(!0):swapTurns()};startGame(),restartButton.addEventListener("click",startGame);